#jinja2: trim_blocks: "true", lstrip_blocks: "false"
{# https://github.com/ansible/ansible/issues/10725 #}
---
global:
  checkNewVersion: true
  sendAnonymousUsage: false  # true by default

# (Optional) Log information
# ---
log:
  level: DEBUG  # DEBUG, INFO, WARNING, ERROR, CRITICAL
#   format: common  # common, json, logfmt
#   filePath: /var/log/traefik/traefik.log

# (Optional) Accesslog
# ---
# accesslog:
  # format: common  # common, json, logfmt
  # filePath: /var/log/traefik/access.log

# (Optional) Enable API and Dashboard
# ---
api:
 dashboard: true  # true by default
 insecure: false  # Don't do this in production!

{% if traefik_enable_ping %}
ping: {}
{% endif %}

{% if traefik_enable_metrics %}
metrics:
  prometheus:
    buckets:
      - 0.1
      - 0.3
      - 1.2
      - 5.0
    entryPoint: metrics
{% endif %}

{% if traefik_enable_api_middleware %}
experimental:
  plugins:
  # api-key-middleware
    traefik-api-key-middleware:
      moduleName: "github.com/dtomlinson91/traefik-api-key-middleware"
      version: "v0.1.2"
{% endif %}


# Entry Points configuration
# ---
entryPoints:
  http:
    address: :80
    # (Optional) Redirect to HTTPS
    # ---
    http:
      redirections:
        entryPoint:
          to: https
          scheme: https
  https:
    address: :443
  {% if traefik_enable_metrics %}
  
  metrics:
    address: :8082
  {% endif %}

# Configure your CertificateResolver here...
# ---
# certificatesResolvers:
#   staging:
#     acme:
#       email: your-email@example.com
#       storage: /etc/traefik/certs/acme.json
#       caServer: "https://acme-staging-v02.api.letsencrypt.org/directory"
#       httpChallenge:
#         entryPoint: web
#
#   production:
#     acme:
#       email: your-email@example.com
#       storage: /etc/traefik/certs/acme.json
#       caServer: "https://acme-v02.api.letsencrypt.org/directory"
#       httpChallenge:
#         entryPoint: web

# (Optional) Overwrite Default Certificates
{# tls:
  certresolver: duckdns
  domains:
    - main: "europa-local.duckdns.org"
    - sans: "*.europa-local.duckdns.org"
  # stores:
   # default:
    #  defaultCertificate:
     #   certFile: {{ traefik_cert_file }}
      #  keyFile: {{ traefik_key_file }}
# (Optional) Disable TLS version 1.0 and 1.1
  #options:
   # default:
    #  minVersion: VersionTLS13 #}

providers:
  docker:
    exposedByDefault: false  # Default is true
    watch: true
  file:
    # watch for dynamic configuration changes
    directory: /etc/traefik
    watch: true

{% if traefik_enable_cert_resolver %}
certificatesResolvers:
  duckdns:
    acme:
      email: {{ TRAEFIK_ACME_EMAIL }}
      storage: "/letsencrypt/acme.json"
      {% if traefik_use_staging_cert %}
      caServer: https://acme-staging-v02.api.letsencrypt.org/directory
      {% endif %}
      dnsChallenge:
        provider: duckdns
        delayBeforeCheck: 30
        resolvers:
          - "1.1.1.1:53"
          - "8.8.8.8:53"
{% endif %}

http:
  middlewares:
    https-redirect:
      redirectScheme:
        scheme: https
    authelia:
      forwardAuth:
        # Found in some guides, but assume it's non-functional or old as it doesn't work
        address: "http://authelia:9091/api/verify?rd={{ traefik_forward_auth_url }}"
    default-headers:
      headers:
        frameDeny: true
        sslRedirect: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https
    {% if traefik_enable_api_middleware %}
    api-middleware:
      plugin:
        traefik-api-key-middleware:
          authenticationHeader: true
          authenticationheaderName: X-API-KEY
          bearerHeader: true
          bearerHeaderName: Authorization
          removeHeadersOnSuccess: true
          keys:
            # Indentation issues after producing template
            {% for key in TRAEFIK_API_KEYS %} 
            - "{{ key }}"
            {% endfor %}
    {% endif %}
    # reference
    # https://github.com/techno-tim/launchpad/blob/master/docker/traefik/data/config.yml
    default-whitelist:
      ipWhiteList:
        sourceRange:
          # Indentation issues after producing template
          {% for range in traefik_ip_ranges %}
          - "{{ range }}"
          {% endfor %}
      
    # https://doc.traefik.io/traefik/middlewares/overview/
    # There are several available middleware in Traefik, some can modify the request, the headers, some are in charge of redirections, some add authentication, and so on.
    secured:
      chain:
        middlewares:
        - default-whitelist
        - default-headers




- hosts: local-1-pre
  become: yes
  # become_user: ansible
  vars_files:
    - vars/main.yml
    - vars/apps.yml
  ignore_errors: "{{ ansible_check_mode }}"
  gather_facts: no

  # Just change SSH port, if fail then assume port is changed
  roles:
    - role: sshd_harden # harden SSHD config

  handlers:
    - include: handlers/handlers.yml


- hosts: local-1
  become: yes
  # become_user: ansible
  vars_files:
    - vars/main.yml
    - vars/apps.yml
  ignore_errors: "{{ ansible_check_mode }}"
  

  pre_tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

  roles: 
    - role: motd # setup MOTD banner
    - role: sshd_harden # harden SSHD config
    - role: sshd_banner # setup SSHD banner
    - role: sudo # setup sudo config
    # - role: autoupdate-Debian
    - role: hifis.unattended_upgrades
      # Do automatic removal of all unused dependencies after the upgrade
      unattended_remove_unused_dependencies: true
      # Remove unused automatically installed kernel-related packages (kernel images, kernel headers and kernel version locked tools)
      unattended_remove_unused_kernel_packages: true 
      unattended_update_days: {"Tue"}
      # Define verbosity level of APT for periodic runs. The output will be sent to root.
      unattended_verbose: 2
      when: ansible_facts['os_family'] == 'Debian' 
    - role: tmux # install and configure tmux
    - role: vim # ensure proper vim config
    - role: zsh # install zsh on machine, set it for admin suer
    - role: gantsign.oh-my-zsh # install oh-my-zsh
      oh_my_zsh_write_zshrc: false
      users:
      - username: "{{ admin_username }}"
        oh_my_zsh:
          install: true
          oh_my_zsh_write_zshrc: false
    - role: zsh-plugins # configure oh-my-zsh plugins
    - role: docker-infra # setup docker infrastructure
    - role: ufw # configure UFW firewall
    - role: docker-compose # Configure docker apps


  handlers:
    - include: handlers/handlers.yml

  #   - name: "Reload UFW"
  #     ufw:
  #       # state: enabled
  #       state: reloaded

  #   - name: "Reload SSHD"
  #     service:
  #       name: sshd
  #       state: restarted



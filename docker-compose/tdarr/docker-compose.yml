---
version: "3"


networks:
  backend:
    external: true 

# Hardening source: https://www.linode.com/content/hackersploit-docker-security-essentials-ebook/

# TO ADD:
# PREVENTING PRIVILEGE ESCALATION ATTACKS
# docker run --security-opt=no-new-privileges <IMAGE-ID>
# The no-new-privileges option will stop container processes from gaining any additional privileges.
# LIMITING CONTAINER CAPABILITIES
# You also can run a container with the --privileged flag, which gives it all of the kernel capability options.
#  However, this is never recommended 
# We can remove all kernel capabilities when running a container with the following options:
# docker run --cap-drop all <IMAGE-ID>
# 2. You can also add the specific kernel capabilities required by your containers by running the following command:
# docker run --cap-drop all --cap-add <CAPABILITY> <IMAGE-ID>

services:
  tdarr:
    image: ghcr.io/haveagitgat/tdarr:latest
    container_name: tdarr
    # For custom Docker user
    # build:
    #   context: "."
    #   target: "app"
    #   args:
    #     - "UID=${UID:-2000}"
    #     - "GID=${GID:-2000}"
    # user: dockeruser
    volumes:
      # Ensure proper timezones
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      # Other required paths - per app
      - ${MEDIA}/kiepscy:/media/kiepscy
      # qbittorrent path
      - /opt/tdarr/server:/app/server
      - /opt/tdarr/configs:/app/configs
      - /opt/tdarr/logs:/app/logs
      - ${MEDIA}/.tdarr_cache:/temp
      # GPU
      # More: https://docs.tdarr.io/docs/installation/docker/hardware-transcoding
      - /dev/dri/renderD128:/dev/dri/renderD128
    restart: unless-stopped
    networks:
      - backend
    ### Seucrity ###
    # cap_add:
    #   - CAP_NET_ADMIN
    # security_opt:
    #   - seccomp:unconfined
    deploy:
      resources:
        limits:
          # Adjust as needed
          cpus: '2'
          memory: '3072M'
        # reservations:
        #   devices:
        #     - capabilities: [gpu]
          # - driver: amdgpu
          #   count: all
          #   capabilities: [gpu]
    # environment:
      # - ENV:VAR
    environment:
      # - TZ=Europe/London
      - PUID=${UID}
      - PGID=${GID}
      - UMASK_SET=002
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - inContainer=true
      - ffmpegVersion=6
      - nodeName=MyInternalNode
      # - NVIDIA_DRIVER_CAPABILITIES=all
      # - NVIDIA_VISIBLE_DEVICES=all
      - ROC_ENABLE_PRE_VEGA=1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${SERVICE_NAME}.rule=Host(`${SUBDOMAIN}.${ROOT_DOMAIN}`)"
      - "traefik.http.services.${SERVICE_NAME}.loadbalancer.server.port=${PORT}"
      # - "traefik.docker.network=frontend"
      - "traefik.http.routers.${SERVICE_NAME}.tls=true"
      - "traefik.http.routers.${SERVICE_NAME}.middlewares=authelia@docker"
      # Watchtower
      # - com.centurylinklabs.watchtower.enable=true
      # scopes: autoupdate, monitor
      # - com.centurylinklabs.watchtower.scope=autoupdate
      # Homer labels
      - "homer.enable=true"
      - "homepage.group=Downloading"
      - "homepage.name=Tdarr"
      - "homepage.description=cross-platform conditional based transcoding application for automating media library transcode/remux management "
      - "homepage.icon=tdarr.png"
      # - homer.priority=2
      - "homer.target=_blank"
      - "homepage.href=https://${SUBDOMAIN}.${ROOT_DOMAIN}"
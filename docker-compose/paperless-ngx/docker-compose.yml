# docker-compose file for running paperless from the docker container registry.
# This file contains everything paperless needs to run.
# Paperless supports amd64, arm and arm64 hardware.
# All compose files of paperless configure paperless in the following way:
#
# - Paperless is (re)started on system boot, if it was running before shutdown.
# - Docker volumes for storing data are managed by Docker.
# - Folders for importing and exporting files are created in the same directory
#   as this file and mounted to the correct folders inside the container.
# - Paperless listens on port 8000.
#
# SQLite is used as the database. The SQLite file is stored in the data volume.
#
# In addition to that, this docker-compose file adds the following optional
# configurations:
#
# - Apache Tika and Gotenberg servers are started with paperless and paperless
#   is configured to use these services. These provide support for consuming
#   Office documents (Word, Excel, Power Point and their LibreOffice counter-
#   parts.
#
# To install and update paperless with this file, do the following:
#
# - Copy this file as 'docker-compose.yml' and the files 'docker-compose.env'
#   and '.env' into a folder.
# - Run 'docker-compose pull'.
# - Run 'docker-compose run --rm webserver createsuperuser' to create a user.
# - Run 'docker-compose up -d'.
#
# For more extensive installation and update instructions, refer to the
# documentation.

version: "3.4"

networks:
  backend:
    external: true 


services:
  broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - /opt/paperless-ngx/redisdata:/data
    networks:
      - backend

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:2.5.4
    container_name: paperless-ngx
    restart: always
    depends_on:
      - broker
      - gotenberg
      - tika
    # ports:
    #   - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - /opt/paperless-ngx/data:/usr/src/paperless/data
      - ${MEDIA}/00paperless/media:/usr/src/paperless/media
      - ${MEDIA}/00paperless/export:/usr/src/paperless/export
      - ${MEDIA}/00paperless/consume:/usr/src/paperless/consume
    # env_file: docker-compose.env
    environment:
      PAPERLESS_REDIS: redis://paperless-broker-1:6379
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg-1:3000
      PAPERLESS_TIKA_ENDPOINT: http://paperless-tika-1:9998
      PAPERLESS_ADMIN_USER: "admin"
      PAPERLESS_ADMIN_PASSWORD: "admin"
      # My custom user
      USERMAP_UID: "2000"
      USERMAP_GID: "2000"
      PAPERLESS_OCR_LANGUAGES: "eng pol"
      PAPERLESS_TIME_ZONE: "Europe/Warsaw"
      PAPERLESS_OCR_LANGUAGE: pol
      PAPERLESS_URL: https://${SUBDOMAIN}.${ROOT_DOMAIN}
      PAPERLESS_CONSUMER_RECURSIVE: "true"
      PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${SERVICE_NAME}.rule=Host(`${SUBDOMAIN}.${ROOT_DOMAIN}`)"
      - "traefik.http.services.${SERVICE_NAME}.loadbalancer.server.port=${PORT}"
      # - "traefik.docker.network=frontend"
      - "traefik.http.routers.${SERVICE_NAME}.tls=true"
      - "traefik.http.routers.${SERVICE_NAME}.middlewares=authelia@docker"
      # Homer labels
      - "homepage.group=Media & Fun"
      - "homepage.name=Paperless-ngx"
      - "homepage.description=Open-source document management system that transforms your physical documents into a searchable online archive."
      - "homepage.icon=paperless-ng.png"
      # - homer.priority=2
      - "homer.target=_blank"
      - "homepage.href=https://${SUBDOMAIN}.${ROOT_DOMAIN}"

  gotenberg:
    image: docker.io/gotenberg/gotenberg:7.10
    restart: unless-stopped

    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    networks:
      - backend

  tika:
    image: ghcr.io/paperless-ngx/tika:latest
    restart: unless-stopped
    networks:
      - backend

# volumes:
  # data:
  # media:
  # redisdata:

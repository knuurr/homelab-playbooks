- name: Create target directory for Docker Compose files
  file:
    path: "{{ compose_file_path }}/"
    state: directory
    mode: '0644'
    # owner: 

# If we want to stop any old docker-compsoe services, we still need old docker-compose.yml files for them
- name: Transfer NEW docker-compose folders to remote host (no delete)
  synchronize:
    # src: "docker-compose/docker-compose-{{ item }}"
    src: "docker-compose/"
    dest: "{{ compose_file_path }}/"
    rsync_opts:
      - "--chmod=644"
      - "--exclude=dev-*"
      - "--exclude=*.example"
    recursive: yes
    archive: no
    checksum: yes
    delete: no
  # loop: "{{ prod_apps }}"


- name: Set owner recursively for docker-compose folders
  file:
    path: "{{ compose_file_path }}/"
    owner: root
    group: root
    recurse: yes
    state: directory


# - name: Upload config for Traefik
#   # Specify the tasks that upload the config for certain applications
#   # Use "item.name" in the condition to check if it matches the desired string
#   include_tasks: "config-{{ item.name }}.yml"
#   when: item.name == 'traefik'


# - name: Upload config for Authelia
#   # Specify the tasks that upload the config for certain applications
#   # Use "item.name" in the condition to check if it matches the desired string
#   include_tasks: "config-{{ item.name }}.yml"
#   when: item.name == 'authelia'

# - name: Upload config for CoreDNS
#   # Specify the tasks that upload the config for certain applications
#   # Use "item.name" in the condition to check if it matches the desired string
#   include_tasks: "config-{{ item.name }}.yml"
#   when: item.name == 'coredns'

- name: Upload config for Traefik/Authelia/CoreDNS/Homer
  include_tasks: "config-{{ item.name }}.yml"
  loop: "{{ prod_apps }}"
  when: item.name in ['traefik', 'authelia', 'coredns', 'homer']



# With async, this will always return "changed"
- name: Launch Docker Compose files
  docker_compose:
    project_src: "{{ compose_file_path }}/{{ item.name }}/"
    # state: present
    # Specifying "absent" is the same as running "docker-compose down".
    state: "{{ item.state | default('present') }}"
    restarted: "{{ item.restarted | default('true') }}"
    # ignore the cache during the image build process.
    nocache: "{{ item.nocache | default('false') }}"
  loop: "{{ prod_apps }}"

# We can remove docker-compose files after stopping (if any)
- name: Sync docker-compose folders to remote host (inc delete)
  synchronize:
    # src: "docker-compose/docker-compose-{{ item }}"
    src: "docker-compose/"
    dest: "{{ compose_file_path }}/"
    rsync_opts:
      - "--chmod=644"
      - "--exclude=dev-*"
      - "--exclude=*.example"
    recursive: yes
    archive: no
    checksum: yes
    delete: yes
  # loop: "{{ prod_apps }}"


- name: Set owner recursively for docker-compose folders
  file:
    path: "{{ compose_file_path }}/"
    owner: root
    group: root
    recurse: yes
    state: directory